name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build - ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            cross: false
            
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            cross: true
            
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            cross: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest' && !matrix.cross
        run: |
          sudo apt update
          sudo apt install -y libglib2.0-dev libpolkit-gobject-1-dev libpolkit-agent-1-dev

      - name: Install cross
        if: matrix.cross
        run: |
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Build with cargo
        if: "!matrix.cross"
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build with cross
        if: matrix.cross
        run: cross build --release --target ${{ matrix.target }}

      - name: Strip binary
        run: |
          strip target/${{ matrix.target }}/release/polkit-agent || true

      - name: Create tarball
        run: |
          cd target/${{ matrix.target }}/release
          tar czf polly-${{ github.ref_name }}-${{ matrix.target }}.tar.gz polkit-agent
          mv polly-${{ github.ref_name }}-${{ matrix.target }}.tar.gz ${{ github.workspace }}/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: polly-${{ matrix.target }}
          path: polly-${{ github.ref_name }}-${{ matrix.target }}.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir release-assets
          find artifacts -type f -name '*.tar.gz' -exec cp {} release-assets/ \;
          ls -lah release-assets/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-assets/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
